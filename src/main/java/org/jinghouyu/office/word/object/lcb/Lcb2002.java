package org.jinghouyu.office.word.object.lcb;

import java.io.IOException;
import java.io.InputStream;

import org.jinghouyu.office.basic.compound.utils.IOUtils;
import org.jinghouyu.office.basic.compound.utils.littleendian.LeInteger;

public class Lcb2002 extends Lcb2000 {

	private long fcUnused1;
	private long lcbUnused1;
	private long fcPlcfPgp;
	private long lcbPlcfPgp;
	private long fcPlcfuim;
	private long lcbPlcfuim;
	private long fcPlfguidUim;
	private long lcbPlfguidUim;
	private long fcAtrdExtra;
	private long lcbAtrdExtra;
	private long fcPlrsid;
	private long lcbPlrsid;
	private long fcSttbfBkmkFactoid;
	private long lcbSttbfBkmkFactoid;
	private long fcPlcfBkfFactoid;
	private long lcbPlcfBkfFactoid;
	private long fcPlcfcookie;
	private long lcbPlcfcookie;
	private long fcPlcfBklFactoid;
	private long lcbPlcfBklFactoid;
	private long fcFactoidData;
	private long lcbFactoidData;
	private long fcDocUndo;
	private long lcbDocUndo;
	private long fcSttbfBkmkFcc;
	private long lcbSttbfBkmkFcc;
	private long fcPlcfBkfFcc;
	private long lcbPlcfBkfFcc;
	private long fcPlcfBklFcc;
	private long lcbPlcfBklFcc;
	private long fcSttbfbkmkBPRepairs;
	private long lcbSttbfbkmkBPRepairs;
	private long fcPlcfbkfBPRepairs;
	private long lcbPlcfbkfBPRepairs;
	private long fcPlcfbklBPRepairs;
	private long lcbPlcfbklBPRepairs;
	private long fcPmsNew;
	private long lcbPmsNew;
	private long fcODSO;
	private long lcbODSO;
	private long fcPlcfpmiOldXP;
	private long lcbPlcfpmiOldXP;
	private long fcPlcfpmiNewXP;
	private long lcbPlcfpmiNewXP;
	private long fcPlcfpmiMixedXP;
	private long lcbPlcfpmiMixedXP;
	private long fcUnused2;
	private long lcbUnused2;
	private long fcPlcffactoid;
	private long lcbPlcffactoid;
	private long fcPlcflvcOldXP;
	private long lcbPlcflvcOldXP;
	private long fcPlcflvcNewXP;
	private long lcbPlcflvcNewXP;
	private long fcPlcflvcMixedXP;
	private long lcbPlcflvcMixedXP;

	
	public void parse(InputStream in) throws IOException {
		super.parse(in);
		this.fcUnused1 = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbUnused1 = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfPgp = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfPgp = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfuim = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfuim = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlfguidUim = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlfguidUim = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcAtrdExtra = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbAtrdExtra = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlrsid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlrsid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcSttbfBkmkFactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbSttbfBkmkFactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfBkfFactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfBkfFactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfcookie = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfcookie = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfBklFactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfBklFactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcFactoidData = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbFactoidData = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcDocUndo = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbDocUndo = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcSttbfBkmkFcc = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbSttbfBkmkFcc = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfBkfFcc = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfBkfFcc = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfBklFcc = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfBklFcc = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcSttbfbkmkBPRepairs = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbSttbfbkmkBPRepairs = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfbkfBPRepairs = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfbkfBPRepairs = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfbklBPRepairs = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfbklBPRepairs = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPmsNew = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPmsNew = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcODSO = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbODSO = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfpmiOldXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfpmiOldXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfpmiNewXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfpmiNewXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcfpmiMixedXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcfpmiMixedXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcUnused2 = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbUnused2 = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcffactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcffactoid = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcflvcOldXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcflvcOldXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcflvcNewXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcflvcNewXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.fcPlcflvcMixedXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
		this.lcbPlcflvcMixedXP = LeInteger.toInteger(IOUtils.readFully(in, 4));
	}
}